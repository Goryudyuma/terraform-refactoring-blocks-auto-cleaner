name: goreleaser
on:
  push:
    branches:
      - main
permissions:
  contents: write
  # packages: write
  # issues: write
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: stable
      - name: Get current tag
        id: get_current_tag
        run: echo "current_tag=$(git describe --tags --exact-match 2> /dev/null)" >> "$GITHUB_OUTPUT"
      # tagがなければ、一つ前のtagからパッチバージョンを1足して新しくtagをつける
      - if: steps.get_current_tag.outputs.current_tag == ''
        run: git tag "$(git tag --merged main --sort -v:refname | head -n 1 | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        with:
          app-id: ${{ secrets.PROJECT_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.PROJECT_AUTOMATION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "homebrew-tap"
      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
